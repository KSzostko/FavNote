{"version":3,"sources":["components/Form/Form.module.scss","components/Header/HeaderNav/HeaderNav.module.scss","components/List/ListItem/ListItem.module.scss","components/Form/FormRadio/FormRadio.module.scss","components/Button/Button.module.scss","components/List/List.module.scss","components/Title/Title.module.scss","components/Header/Header.module.scss","assets/img/logo.svg","context.js","components/Title/Title.js","components/Button/Button.js","components/List/ListItem/ListItem.js","components/List/List.js","views/NotesView.js","views/ArticlesView.js","views/TwittersView.js","components/Form/FormRadio/FormRadio.js","components/Form/Form.js","components/Header/HeaderNav/HeaderNav.js","components/Header/Header.js","views/Root.js","index.js"],"names":["module","exports","AppContext","React","createContext","Header","children","className","style","header","Button","href","buttonClass","secondary","primary","Consumer","context","rel","target","onClick","openForm","defaultProps","ListItem","type","name","imageUrl","description","wrapper","image","src","alt","content","Title","content__description","List","list","length","noItems","map","title","link","key","NotesView","ArticlesView","TwittersView","FormRadio","id","checked","change","radio","input","onChange","radioCheck","types","Form","state","handleRadioChange","e","setState","handleInputChange","value","this","props","click","addItemFn","closeButton","onSubmit","form","form__radioWrapper","form__inputWrapper","form__label","htmlFor","form__input","form__textarea","rows","Component","HeaderNav","list__item","exact","to","list__link","activeClassName","list__linkActive","logo","Root","isFormVisible","twitter","article","note","closeForm","addItem","newItem","preventDefault","console","log","prevState","contextElements","basename","process","Provider","path","component","ReactDOM","render","document","getElementById"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,sBAAsB,YAAc,0BAA0B,mBAAqB,iCAAiC,YAAc,0BAA0B,YAAc,0BAA0B,eAAiB,+B,kBCAjPD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,WAAa,8BAA8B,WAAa,8BAA8B,iBAAmB,sC,qBCA1JD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,MAAQ,wBAAwB,QAAU,0BAA0B,qBAAuB,yC,sBCAjJD,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,MAAQ,yBAAyB,WAAa,gC,iBCAjGD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,UAAY,4B,gBCAhED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,wB,qBCAtDD,EAAOC,QAAU,CAAC,OAAS,wB,kBCA3BD,EAAOC,QAAU,CAAC,QAAU,0B,gBCD5BD,EAAOC,QAAU,IAA0B,kC,oNCI5BC,EAFIC,IAAMC,gB,iBCYVC,EAVA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACX,wBAAIC,UAAWC,IAAMC,QAChBH,I,iBCDHI,EAAS,SAAC,GAAmC,IAAjCJ,EAAgC,EAAhCA,SAAUK,EAAsB,EAAtBA,KAClBC,EADwC,EAAhBC,UACEL,IAAMK,UAAYL,IAAMM,QAExD,OACI,kBAAC,EAAWC,SAAZ,MACK,SAACC,GACE,OAAIL,EAEI,uBACIA,KAAMA,EACNJ,UAAWK,EACXK,IAAI,sBACJC,OAAO,UAENZ,GAKL,4BAAQa,QAASH,EAAQI,SAAUb,UAAWK,GACzCN,OAe7BI,EAAOW,aAAe,CAClBR,WAAW,GAGAH,Q,iBChBAY,EApBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,YAAaf,EAAtC,EAAsCA,KAAtC,OACb,wBAAIJ,UAAWC,IAAMmB,SACP,YAATJ,GACM,yBAAKhB,UAAWC,IAAMoB,MAAOC,IAAkB,KAAbJ,EAL5B,mEAK6DA,EAAUK,IAAKN,IACzF,yBAAKjB,UAAWC,IAAMuB,SAClB,kBAACC,EAAD,KAAQR,GACR,uBAAGjB,UAAWC,IAAMyB,sBAAuBP,GACjC,SAATH,GACM,kBAAC,EAAD,CAAQZ,KAAMA,GAAd,QAAmC,YAATY,EAAqB,WAAa,GAA5D,Y,iBCaJW,EAxBF,SAAC,GAAD,IAAGX,EAAH,EAAGA,KAAH,OACT,kBAAC,EAAWR,SAAZ,MACK,SAACC,GACE,OACI,wBAAIT,UAAWC,IAAM2B,MACS,IAAzBnB,EAAQO,GAAMa,QACR,wBAAI7B,UAAWC,IAAM6B,SAArB,oDACNrB,EAAQO,GAAMe,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMZ,EAAhB,EAAgBA,MAAOF,EAAvB,EAAuBA,YAAvB,OACf,kBAAC,EAAD,CACIH,KAAMA,EACNC,KAAMe,EACN5B,KAAM6B,EACNf,SAAUG,EACVF,YAAaA,EACbe,IAAKF,YCZlBG,EAJG,kBACd,kBAAC,EAAD,CAAMnB,KAAK,UCGAoB,EAJM,kBACjB,kBAAC,EAAD,CAAMpB,KAAK,aCGAqB,EAJM,kBACjB,kBAAC,EAAD,CAAMrB,KAAK,a,iBCqBAsB,EArBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIxC,EAAP,EAAOA,SAAUyC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,OAA1B,OACd,2BAAOzC,UAAWC,IAAMyC,OACpB,2BACIH,GAAIA,EACJvC,UAAWC,IAAM0C,MACjB3B,KAAK,QACLwB,QAASA,EACTI,SAAUH,IAEd,yBAAKzC,UAAWC,IAAM4C,aACrB9C,I,gBCPH+C,EACO,UADPA,EAEO,UAFPA,EAGI,OAwHKC,E,2MApHXC,MAAQ,CACJR,QAASM,EACTd,MAAO,GACPC,KAAM,GACNZ,MAAO,GACPF,YAAa,I,EAGjB8B,kBAAoB,SAACC,GACjB,EAAKC,SAAS,CACVX,QAASU,EAAEvC,OAAO4B,GAClBP,MAAO,GACPC,KAAM,GACNZ,MAAO,GACPF,YAAa,M,EAIrBiC,kBAAoB,SAACF,GACjB,EAAKC,SAAL,eACKD,EAAEvC,OAAOM,KAAOiC,EAAEvC,OAAO0C,S,wEAIxB,IAAD,SACgDC,KAAKN,MAAlDR,EADH,EACGA,QAASR,EADZ,EACYA,MAAOC,EADnB,EACmBA,KAAMZ,EADzB,EACyBA,MAAOF,EADhC,EACgCA,YADhC,EAEwBmC,KAAKC,MAA1BC,EAFH,EAEGA,MAAOC,EAFV,EAEUA,UAEf,OACI,yBAAKzD,UAAWC,IAAMmB,SAClB,4BAAQR,QAAS4C,EAAOxD,UAAWC,IAAMyD,cACzC,kBAACjC,EAAD,0CACA,0BAAMkC,SAAU,SAACT,GAAD,OAAOO,EAAUP,EAAG,EAAKF,QAAQhD,UAAWC,IAAM2D,MAC9D,yBAAK5D,UAAWC,IAAM4D,oBAClB,kBAAC,EAAD,CACItB,GAAIO,EACJN,QAASA,IAAYM,EACrBL,OAAQa,KAAKL,mBAHjB,WAOA,kBAAC,EAAD,CACIV,GAAIO,EACJN,QAASA,IAAYM,EACrBL,OAAQa,KAAKL,mBAHjB,WAOA,kBAAC,EAAD,CACIV,GAAIO,EACJN,QAASA,IAAYM,EACrBL,OAAQa,KAAKL,mBAHjB,SAQJ,uBAAGjD,UAAWC,IAAM6D,oBAChB,2BAAO9D,UAAWC,IAAM8D,YAAaC,QAAQ,SACxCxB,IAAYM,EAAgB,eAAiB,SAElD,2BACI7B,KAAK,QACLoC,MAAOrB,EACPY,SAAUU,KAAKF,kBACfpD,UAAWC,IAAMgE,YACjBjD,KAAK,UAGZwB,IAAYM,GAEL,uBAAG9C,UAAWC,IAAM6D,oBAChB,2BAAO9D,UAAWC,IAAM8D,YAAaC,QAAQ,QACxCxB,IAAYM,EAAgB,eAAiB,QAElD,2BACI7B,KAAK,OACLoC,MAAOpB,EACPW,SAAUU,KAAKF,kBACfpD,UAAWC,IAAMgE,YACjBjD,KAAK,UAIpBwB,IAAYM,GACT,uBAAG9C,UAAWC,IAAM6D,oBAChB,2BAAO9D,UAAWC,IAAM8D,YAAaC,QAAQ,SAA7C,SACA,2BACI/C,KAAK,QACLoC,MAAOhC,EACPuB,SAAUU,KAAKF,kBACfpD,UAAWC,IAAMgE,YACjBjD,KAAK,UAIjB,uBAAGhB,UAAWC,IAAM6D,oBAChB,2BAAO9D,UAAWC,IAAM8D,YAAaC,QAAQ,eAA7C,eACA,8BACI/C,KAAK,cACLoC,MAAOlC,EACPyB,SAAUU,KAAKF,kBACfpD,UAAWC,IAAMiE,eACjBC,KAAK,QAGb,kBAAC,EAAD,2B,GA1GDC,a,gBC0BJC,EAnCG,kBACd,6BACI,wBAAIrE,UAAWC,IAAM2B,MACjB,wBAAI5B,UAAWC,IAAMqE,YACjB,kBAAC,IAAD,CACIC,OAAK,EACLC,GAAG,IACHxE,UAAWC,IAAMwE,WACjBC,gBAAiBzE,IAAM0E,kBAJ3B,aASJ,wBAAI3E,UAAWC,IAAMqE,YACjB,kBAAC,IAAD,CACIE,GAAG,YACHxE,UAAWC,IAAMwE,WACjBC,gBAAiBzE,IAAM0E,kBAH3B,aAQJ,wBAAI3E,UAAWC,IAAMqE,YACjB,kBAAC,IAAD,CACIE,GAAG,SACHxE,UAAWC,IAAMwE,WACjBC,gBAAiBzE,IAAM0E,kBAH3B,a,kCCbD7E,EARA,kBACX,yBAAKE,UAAWC,IAAMmB,SAClB,yBAAKE,IAAKsD,IAAMrD,IAAI,aACpB,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQjB,WAAS,GAAjB,cCmFOuE,E,2MAnFX7B,MAAQ,CACJ8B,eAAe,EACfC,QAAS,CACL,CACI/C,MAAO,cACPC,KAAM,kCACNZ,MAAO,gFACPF,YAAa,6BAEjB,CACIa,MAAO,cACPC,KAAM,kCACNZ,MAAO,gFACPF,YAAa,6BAEjB,CACIa,MAAO,cACPC,KAAM,kCACNZ,MAAO,gFACPF,YAAa,6BAEjB,CACIa,MAAO,cACPC,KAAM,kCACNZ,MAAO,gFACPF,YAAa,8BAGrB6D,QAAS,GACTC,KAAM,I,EAGVpE,SAAW,kBACP,EAAKsC,SAAS,CACV2B,eAAe,K,EAIvBI,UAAY,kBACR,EAAK/B,SAAS,CACV2B,eAAe,K,EAIvBK,QAAU,SAACjC,EAAGkC,GACVlC,EAAEmC,iBACFC,QAAQC,IAAIH,EAAQ5C,SAEpB,EAAKW,UAAS,SAAAqC,GAAS,sBAClBJ,EAAQ5C,QADU,sBAEZgD,EAAUJ,EAAQ5C,UAFN,CAGf4C,QAIR,EAAKF,a,wEAGC,IAAD,EAC6C5B,KAAKN,MAA/C8B,EADH,EACGA,cAAeC,EADlB,EACkBA,QAASC,EAD3B,EAC2BA,QAASC,EADpC,EACoCA,KACnCQ,EAAkB,CACpB5E,SAAUyC,KAAKzC,SACfkE,UACAC,UACAC,QAGJ,OACI,kBAAC,IAAD,CAAeS,SAAUC,YACrB,kBAAC,EAAWC,SAAZ,CAAqBvC,MAAOoC,GACxB,kBAAC,EAAD,MACCX,GAAiB,kBAAC,EAAD,CAAMrB,UAAWH,KAAK6B,QAAS3B,MAAOF,KAAK4B,YAC7D,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOX,OAAK,EAACsB,KAAK,IAAIC,UAAWzD,IACjC,kBAAC,IAAD,CAAOwD,KAAK,YAAYC,UAAW1D,IACnC,kBAAC,IAAD,CAAOyD,KAAK,SAASC,UAAW3D,W,GA5ErCiC,aCJnB2B,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.a3192cb1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Form_wrapper__3SeBq\",\"closeButton\":\"Form_closeButton__Nwc2c\",\"form__inputWrapper\":\"Form_form__inputWrapper__3A6ta\",\"form__label\":\"Form_form__label__2MGAT\",\"form__input\":\"Form_form__input__2WuUd\",\"form__textarea\":\"Form_form__textarea__CXtax\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"HeaderNav_list__2s2vk\",\"list__item\":\"HeaderNav_list__item__iHbv7\",\"list__link\":\"HeaderNav_list__link__1SORO\",\"list__linkActive\":\"HeaderNav_list__linkActive__I_9AE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ListItem_wrapper__2AFnH\",\"image\":\"ListItem_image__Ynb9x\",\"content\":\"ListItem_content__2ZF-h\",\"content__description\":\"ListItem_content__description__3q_3w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"FormRadio_radio___V0at\",\"input\":\"FormRadio_input__oI9ct\",\"radioCheck\":\"FormRadio_radioCheck__25vAV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primary\":\"Button_primary__2STjO\",\"secondary\":\"Button_secondary__1xZpO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__3_i_G\",\"noItems\":\"List_noItems__7Id0r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Title_header__1f2hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__oVFp2\"};","module.exports = __webpack_public_path__ + \"static/media/logo.d650c88b.svg\";","import React from 'react';\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport default AppContext;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Title.module.scss';\r\n\r\nconst Header = ({ children }) => (\r\n    <h1 className={style.header}>\r\n        {children}\r\n    </h1>\r\n);\r\n\r\nHeader.propTypes = {\r\n    children: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppContext from '../../context';\r\nimport style from './Button.module.scss';\r\n\r\nconst Button = ({ children, href, secondary }) => {\r\n    const buttonClass = secondary ? style.secondary : style.primary;\r\n\r\n    return (\r\n        <AppContext.Consumer>\r\n            {(context) => {\r\n                if (href) {\r\n                    return (\r\n                        <a\r\n                            href={href}\r\n                            className={buttonClass}\r\n                            rel=\"noopener noreferrer\"\r\n                            target=\"_blank\"\r\n                        >\r\n                            {children}\r\n                        </a>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <button onClick={context.openForm} className={buttonClass}>\r\n                            {children}\r\n                        </button>\r\n                    );\r\n                }\r\n            }}\r\n        </AppContext.Consumer >\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    children: PropTypes.string,\r\n    href: PropTypes.string,\r\n    secondary: PropTypes.bool.isRequired,\r\n};\r\n\r\nButton.defaultProps = {\r\n    secondary: false,\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Title from '../../Title/Title';\r\nimport Button from '../../Button/Button';\r\nimport style from './ListItem.module.scss';\r\n\r\nconst genericPhoto = 'https://idisl.info/wp-content/uploads/2015/07/generic-avatar.png';\r\n\r\nconst ListItem = ({ type, name, imageUrl, description, href }) => (\r\n    <li className={style.wrapper}>\r\n        {type === \"twitter\"\r\n            && <img className={style.image} src={imageUrl === '' ? genericPhoto : imageUrl} alt={name} />}\r\n        <div className={style.content}>\r\n            <Title>{name}</Title>\r\n            <p className={style.content__description}>{description}</p>\r\n            {type !== \"note\"\r\n                && <Button href={href}>visit{type === \"twitter\" ? \" twitter\" : \"\"} page</Button>}\r\n        </div>\r\n    </li>\r\n);\r\n\r\nListItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    imageUrl: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    href: PropTypes.string,\r\n};\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport AppContext from '../../context';\r\nimport ListItem from './ListItem/ListItem';\r\nimport style from './List.module.scss';\r\n\r\nconst List = ({ type }) => (\r\n    <AppContext.Consumer>\r\n        {(context) => {\r\n            return (\r\n                <ul className={style.list}>\r\n                    {context[type].length === 0\r\n                        && <h1 className={style.noItems}>There's nothing yet here, please add some items!</h1>}\r\n                    {context[type].map(({ title, link, image, description }) => (\r\n                        <ListItem\r\n                            type={type}\r\n                            name={title}\r\n                            href={link}\r\n                            imageUrl={image}\r\n                            description={description}\r\n                            key={title}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n            );\r\n\r\n        }}\r\n    </AppContext.Consumer>\r\n);\r\n\r\nexport default List;","import React from 'react';\r\nimport List from '../components/List/List';\r\n\r\nconst NotesView = () => (\r\n    <List type=\"note\" />\r\n);\r\n\r\nexport default NotesView;","import React from 'react';\r\nimport List from '../components/List/List';\r\n\r\nconst ArticlesView = () => (\r\n    <List type=\"article\" />\r\n);\r\n\r\nexport default ArticlesView;","import React from 'react';\r\nimport List from '../components/List/List';\r\n\r\nconst TwittersView = () => (\r\n    <List type=\"twitter\" />\r\n);\r\n\r\nexport default TwittersView;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './FormRadio.module.scss';\r\n\r\nconst FormRadio = ({ id, children, checked, change }) => (\r\n    <label className={style.radio}>\r\n        <input\r\n            id={id}\r\n            className={style.input}\r\n            type=\"radio\"\r\n            checked={checked}\r\n            onChange={change}\r\n        />\r\n        <div className={style.radioCheck}></div>\r\n        {children}\r\n    </label>\r\n);\r\n\r\nFormRadio.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    children: PropTypes.string.isRequired,\r\n    checked: PropTypes.bool.isRequired,\r\n    change: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FormRadio;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Title from '../Title/Title';\r\nimport Button from '../Button/Button';\r\nimport FormRadio from './FormRadio/FormRadio';\r\nimport style from './Form.module.scss';\r\n\r\nconst types = {\r\n    twitter: 'twitter',\r\n    article: 'article',\r\n    note: 'note'\r\n};\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        checked: types.twitter,\r\n        title: '',\r\n        link: '',\r\n        image: '',\r\n        description: '',\r\n    }\r\n\r\n    handleRadioChange = (e) => {\r\n        this.setState({\r\n            checked: e.target.id,\r\n            title: '',\r\n            link: '',\r\n            image: '',\r\n            description: '',\r\n        });\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { checked, title, link, image, description } = this.state;\r\n        const { click, addItemFn } = this.props;\r\n\r\n        return (\r\n            <div className={style.wrapper}>\r\n                <button onClick={click} className={style.closeButton}></button>\r\n                <Title>Add new favourite Twitter account</Title>\r\n                <form onSubmit={(e) => addItemFn(e, this.state)} className={style.form}>\r\n                    <div className={style.form__radioWrapper}>\r\n                        <FormRadio\r\n                            id={types.twitter}\r\n                            checked={checked === types.twitter}\r\n                            change={this.handleRadioChange}\r\n                        >\r\n                            Twitter\r\n                        </FormRadio>\r\n                        <FormRadio\r\n                            id={types.article}\r\n                            checked={checked === types.article}\r\n                            change={this.handleRadioChange}\r\n                        >\r\n                            Article\r\n                        </FormRadio>\r\n                        <FormRadio\r\n                            id={types.note}\r\n                            checked={checked === types.note}\r\n                            change={this.handleRadioChange}\r\n                        >\r\n                            Note\r\n                        </FormRadio>\r\n                    </div>\r\n                    <p className={style.form__inputWrapper}>\r\n                        <label className={style.form__label} htmlFor=\"title\">\r\n                            {checked === types.twitter ? 'Twitter Name' : 'Title'}\r\n                        </label>\r\n                        <input\r\n                            name=\"title\"\r\n                            value={title}\r\n                            onChange={this.handleInputChange}\r\n                            className={style.form__input}\r\n                            type=\"text\"\r\n                        />\r\n                    </p>\r\n                    {checked !== types.note\r\n                        && (\r\n                            <p className={style.form__inputWrapper}>\r\n                                <label className={style.form__label} htmlFor=\"link\">\r\n                                    {checked === types.twitter ? 'Twitter Link' : 'Link'}\r\n                                </label>\r\n                                <input\r\n                                    name=\"link\"\r\n                                    value={link}\r\n                                    onChange={this.handleInputChange}\r\n                                    className={style.form__input}\r\n                                    type=\"text\"\r\n                                />\r\n                            </p>\r\n                        )}\r\n                    {checked === types.twitter && (\r\n                        <p className={style.form__inputWrapper}>\r\n                            <label className={style.form__label} htmlFor=\"image\">Image</label>\r\n                            <input\r\n                                name=\"image\"\r\n                                value={image}\r\n                                onChange={this.handleInputChange}\r\n                                className={style.form__input}\r\n                                type=\"text\"\r\n                            />\r\n                        </p>\r\n                    )}\r\n                    <p className={style.form__inputWrapper}>\r\n                        <label className={style.form__label} htmlFor=\"description\">Description</label>\r\n                        <textarea\r\n                            name=\"description\"\r\n                            value={description}\r\n                            onChange={this.handleInputChange}\r\n                            className={style.form__textarea}\r\n                            rows=\"10\"\r\n                        ></textarea>\r\n                    </p>\r\n                    <Button>add new item</Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nForm.propTypes = {\r\n    click: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './HeaderNav.module.scss';\r\n\r\nconst HeaderNav = () => (\r\n    <nav>\r\n        <ul className={style.list}>\r\n            <li className={style.list__item}>\r\n                <NavLink\r\n                    exact\r\n                    to=\"/\"\r\n                    className={style.list__link}\r\n                    activeClassName={style.list__linkActive}\r\n                >\r\n                    twitters\r\n                </NavLink>\r\n            </li>\r\n            <li className={style.list__item}>\r\n                <NavLink\r\n                    to=\"/articles\"\r\n                    className={style.list__link}\r\n                    activeClassName={style.list__linkActive}\r\n                >\r\n                    articles\r\n                </NavLink>\r\n            </li>\r\n            <li className={style.list__item}>\r\n                <NavLink\r\n                    to=\"/notes\"\r\n                    className={style.list__link}\r\n                    activeClassName={style.list__linkActive}\r\n                >\r\n                    notes\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\n\r\nexport default HeaderNav;","import React from 'react';\r\nimport HeaderNav from './HeaderNav/HeaderNav';\r\nimport Button from '../Button/Button';\r\nimport style from './Header.module.scss';\r\nimport logo from '../../assets/img/logo.svg';\r\n\r\nconst Header = () => (\r\n    <div className={style.wrapper}>\r\n        <img src={logo} alt=\"Fav Note\" />\r\n        <HeaderNav />\r\n        <Button secondary>new item</Button>\r\n    </div>\r\n);\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport AppContext from '../context';\r\nimport NotesView from './NotesView';\r\nimport ArticlesView from './ArticlesView';\r\nimport TwittersView from './TwittersView';\r\nimport Form from '../components/Form/Form';\r\nimport Header from '../components/Header/Header';\r\n\r\nclass Root extends Component {\r\n    state = {\r\n        isFormVisible: false,\r\n        twitter: [\r\n            {\r\n                title: 'Dan Abramov',\r\n                link: 'https://twitter.com/dan_abramov',\r\n                image: 'https://pbs.twimg.com/profile_images/1166344766210150401/amRnWzl-_400x400.jpg',\r\n                description: 'One of the React creators',\r\n            },\r\n            {\r\n                title: 'Dan Abramov',\r\n                link: 'https://twitter.com/dan_abramov',\r\n                image: 'https://pbs.twimg.com/profile_images/1166344766210150401/amRnWzl-_400x400.jpg',\r\n                description: 'One of the React creators',\r\n            },\r\n            {\r\n                title: 'Dan Abramov',\r\n                link: 'https://twitter.com/dan_abramov',\r\n                image: 'https://pbs.twimg.com/profile_images/1166344766210150401/amRnWzl-_400x400.jpg',\r\n                description: 'One of the React creators',\r\n            },\r\n            {\r\n                title: 'Dan Abramov',\r\n                link: 'https://twitter.com/dan_abramov',\r\n                image: 'https://pbs.twimg.com/profile_images/1166344766210150401/amRnWzl-_400x400.jpg',\r\n                description: 'One of the React creators',\r\n            },\r\n        ],\r\n        article: [],\r\n        note: []\r\n    }\r\n\r\n    openForm = () => (\r\n        this.setState({\r\n            isFormVisible: true\r\n        })\r\n    );\r\n\r\n    closeForm = () => (\r\n        this.setState({\r\n            isFormVisible: false\r\n        })\r\n    );\r\n\r\n    addItem = (e, newItem) => {\r\n        e.preventDefault();\r\n        console.log(newItem.checked);\r\n\r\n        this.setState(prevState => ({\r\n            [newItem.checked]: [\r\n                ...prevState[newItem.checked],\r\n                newItem,\r\n            ]\r\n        }));\r\n\r\n        this.closeForm();\r\n    }\r\n\r\n    render() {\r\n        const { isFormVisible, twitter, article, note } = this.state;\r\n        const contextElements = {\r\n            openForm: this.openForm,\r\n            twitter,\r\n            article,\r\n            note,\r\n        };\r\n\r\n        return (\r\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                <AppContext.Provider value={contextElements}>\r\n                    <Header />\r\n                    {isFormVisible && <Form addItemFn={this.addItem} click={this.closeForm} />}\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={TwittersView} />\r\n                        <Route path=\"/articles\" component={ArticlesView} />\r\n                        <Route path=\"/notes\" component={NotesView} />\r\n                    </Switch>\r\n                </AppContext.Provider>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Root;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Root from './views/Root';\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n"],"sourceRoot":""}